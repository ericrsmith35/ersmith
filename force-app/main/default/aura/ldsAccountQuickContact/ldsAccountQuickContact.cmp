<!--
 * Copyright (c) 2018, Salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root
 -->

<!-- 
To be used as a quick action, a Lightning component needs to meet certain conditions. It needs to be configured as able to be executed as an action. It also needs to know the context of the page that it’s executed from.

For the component to know its page context, it must implement the "force:hasRecordId" interface. 
This interface helps save the record ID, so you can make changes to the record.

For the component to be used as a quick action, it must also implement the  "force:lightningQuickActionWithoutHeader" interface.

This component uses Lightning Data Service (LDS), so you don’t need an Apex class.
-->

<aura:component implements="force:lightningQuickActionWithoutHeader,force:hasRecordId">
    
    <!-- To implement LDS, you need "target" attributes to show and save data, plus "force:recordData". -->
	<!-- First we load the account data (the first recordData), then the new contact form (the second recordData) -->
    <aura:attribute name="account" type="Object" />
    <aura:attribute name="simpleAccount" type="Object" />
    <aura:attribute name="accountError" type="String" />
    <force:recordData aura:id="accountRecordLoader"
                      recordId="{!v.recordId}"
                      fields="Name,BillingCity,BillingState"
                      targetRecord="{!v.account}"
                      targetFields="{!v.simpleAccount}"
                      targetError="{!v.accountError}" />
    
    <!-- targetRecord -> Where to store the result
		 targetFields -> A simplified view of the fields on targetRecord. We refer to this object in the user interface markup.
         targetError -> If any error is found, it stores the error message
		 fields -> Specifies which of the record's fields to query	 -->
    
    
    <aura:attribute name="newContact" type="Object" access="private" />
    <aura:attribute name="simpleNewContact" type="Object" access="private" />
    <aura:attribute name="newContactError" type="String" access="private" />
    <force:recordData aura:id="contactRecordCreator"
                     layoutType="FULL"
                     targetRecord="{!v.newContact}"
                     targetFields="{!v.simpleNewContact}"
                     targetError="{!v.newContactError}" />
    
    <!-- First we initialize the form -->
    <aura:handler name="init" value="{!this}" action="{!c.doInit}" />
    
    <!-- Header with details about the account -->    
    <div class="slds-modal__header">
        <p class="slds-text-heading--label">{!v.simpleAccount.Name}</p>
        <h1 class="slds-page-header__title slds-m-right--small slds-truncate slds-align-left">Create new contact</h1>
    </div>
    
    <!-- Display Lightning Data Service errors, if any -->
    <aura:if isTrue="{!not(empty(v.accountError))}">
    	<div class="recordError">
        	<ui:message title="Error" severity="error" closable="true">
            	{!v.accountError}
            </ui:message>
        </div>
    </aura:if>
    <aura:if isTrue="{!not(empty(v.accountError))}">
    	<div class="recordError">
        	<ui:message title="Error" severity="error" closable="true">
            	{!v.newContactError}
            </ui:message>
        </div>
    </aura:if>
    <!-- Display new contact form -->
    <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
    	<lightning:input aura:id="contactField" name="firstName" label="First Name"
                     	value="{!v.simpleNewContact.FirstName}" required="true" />
    
        <lightning:input aura:id="contactField" name="lastName" label="Last Name"
                         value="{!v.simpleNewContact.LastName}" required="true" />
        
        <lightning:input aura:id="contactField" name="phone" label="Phone"
                         pattern="^(1?(-?\d{3})-?)?(\d{3})(-?\d{4})$"
                         messageWhenPatternMismatch="The phone number must contain 7, 10, or 11 digits. Hyphens are optional."
                         value="{!v.simpleNewContact.Phone}" required="true" />
        
        <lightning:input aura:id="contactField" name="email" label="Email"
                         value="{!v.simpleNewContact.Email}" />
    </div>
    <div class="slds-modal__footer">
        <lightning:button class="slds-button_neutral" label="Save" onclick="{!c.handleSaveContact}"/>
        <lightning:button class="slds-button_brand" label="Cancel" onclick="{!c.cancel}"/>
    </div>
    
    <!-- The height of the modal is defined in Salesforce when you create the new action. -->
    <!-- Recommended height: 398px -->

</aura:component>